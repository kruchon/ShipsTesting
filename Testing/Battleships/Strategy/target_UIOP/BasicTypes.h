
/* Program generated by Cadvanced 4.3.0  */
#define XSCT_CADVANCED

#ifndef XX_BasicTypes_H
#define XX_BasicTypes_H

/*************************************************************************
**                SECTION Types and Forward references                  **
*************************************************************************/

/*****
* PACKAGE BasicTypes
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun,4,1,9)
******/
extern XCONST struct xPackageIdStruct yPacR_z_BasicTypes__BasicTypes;

extern void yInit_BasicTypes (void);

/*****
* SYNONYM MaxXCoordinate
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,1,9)
******/
#define z_BasicTypes_1M_MaxXCoordinate SDL_INTEGER_LIT(200)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1M_MaxXCoordinate;
#endif

/*****
* SYNONYM MaxYCoordinate
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,2,9)
******/
#define z_BasicTypes_1N_MaxYCoordinate SDL_INTEGER_LIT(100)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1N_MaxYCoordinate;
#endif

/*****
* SYNONYM MaxWCPower
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,4,9)
******/
#define z_BasicTypes_1O_MaxWCPower SDL_INTEGER_LIT(30)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1O_MaxWCPower;
#endif

/*****
* SYNONYM MaxWCRange
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,5,9)
******/
#define z_BasicTypes_1P_MaxWCRange SDL_INTEGER_LIT(50)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1P_MaxWCRange;
#endif

/*****
* SYNONYM MaxWCSpeed
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,6,9)
******/
#define z_BasicTypes_1Q_MaxWCSpeed SDL_INTEGER_LIT(30)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Q_MaxWCSpeed;
#endif

/*****
* SYNONYM MaxSCRange
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,8,9)
******/
#define z_BasicTypes_1R_MaxSCRange SDL_INTEGER_LIT(100)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1R_MaxSCRange;
#endif

/*****
* SYNONYM MaxSCMaxSpeed
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,9,9)
******/
#define z_BasicTypes_1S_MaxSCMaxSpeed SDL_INTEGER_LIT(10)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1S_MaxSCMaxSpeed;
#endif

/*****
* SYNONYM MaxSCMaxAcceleration
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,10,9)
******/
#define z_BasicTypes_1T_MaxSCMaxAcceleration SDL_INTEGER_LIT(5)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1T_MaxSCMaxAcceleration;
#endif

/*****
* SYNONYM MaxSCMaxResource
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,11,9)
******/
#define z_BasicTypes_1U_MaxSCMaxResource SDL_INTEGER_LIT(100)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1U_MaxSCMaxResource;
#endif

/*****
* SYNONYM MaxAAWeaponry
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,13,9)
******/
#define z_BasicTypes_1V_MaxAAWeaponry SDL_INTEGER_LIT(30)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1V_MaxAAWeaponry;
#endif

/*****
* SYNONYM MaxLUWeaponry
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,14,9)
******/
#define z_BasicTypes_1W_MaxLUWeaponry SDL_INTEGER_LIT(5)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1W_MaxLUWeaponry;
#endif

/*****
* SYNONYM MaxTypeBattleship
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,16,9)
******/
#define z_BasicTypes_1X_MaxTypeBattleship SDL_INTEGER_LIT(2)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1X_MaxTypeBattleship;
#endif

/*****
* SYNONYM MaxTypeCruiser
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,17,9)
******/
#define z_BasicTypes_1Y_MaxTypeCruiser SDL_INTEGER_LIT(1)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Y_MaxTypeCruiser;
#endif

/*****
* SYNONYM MaxTypeDestroyer
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,18,9)
******/
#define z_BasicTypes_1Z_MaxTypeDestroyer SDL_INTEGER_LIT(1)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_1Z_MaxTypeDestroyer;
#endif

/*****
* SYNONYM MaxTypeMissileCutter
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,19,9)
******/
#define z_BasicTypes_20_MaxTypeMissileCutter SDL_INTEGER_LIT(1)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_20_MaxTypeMissileCutter;
#endif

/*****
* SYNONYM MaxTypeRepairBoat
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,20,9)
******/
#define z_BasicTypes_21_MaxTypeRepairBoat SDL_INTEGER_LIT(1)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_21_MaxTypeRepairBoat;
#endif

/*****
* SYNONYM MaxTypePatrolBoat
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,21,9)
******/
#define z_BasicTypes_22_MaxTypePatrolBoat SDL_INTEGER_LIT(3)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_22_MaxTypePatrolBoat;
#endif

/*****
* SYNONYM AmountStrategy
* <<PACKAGE BasicTypes>>
* #SDTREF(TEXT,C:\Testing\Battleships\Config\ConfigFile.pr,23,9)
******/
#define z_BasicTypes_23_AmountStrategy SDL_INTEGER_LIT(2)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_23_AmountStrategy;
#endif

/*****
* SYNONYM sqrt2
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),455(80,130),1,9)
******/
#define z_BasicTypes_24_sqrt2 SDL_REAL_LIT(1.41421356, 1, 414213560)
#ifdef XUSESYNONYMIDNODES
extern XCONST struct xSynonymIdStruct ySynR_z_BasicTypes_24_sqrt2;
#endif

/*****
* SYNTYPE tSCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_18_tSCRange;
typedef SDL_Integer  z_BasicTypes_18_tSCRange;

/*****
* SYNTYPE tSCMaxSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_19_tSCMaxSpeed;
typedef SDL_Integer  z_BasicTypes_19_tSCMaxSpeed;

/*****
* SYNTYPE tSCMaxAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1A_tSCMaxAcceleration;
typedef SDL_Integer  z_BasicTypes_1A_tSCMaxAcceleration;

/*****
* SYNTYPE tSCMaxResource  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1B_tSCMaxResource;
typedef SDL_Integer  z_BasicTypes_1B_tSCMaxResource;

/*****
* SYNTYPE tWCPower  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1C_tWCPower;
typedef SDL_Integer  z_BasicTypes_1C_tWCPower;

/*****
* SYNTYPE tWCRange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1D_tWCRange;
typedef SDL_Integer  z_BasicTypes_1D_tWCRange;

/*****
* SYNTYPE tWCSpeed  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1E_tWCSpeed;
typedef SDL_Integer  z_BasicTypes_1E_tWCSpeed;

/*****
* SYNTYPE tAAWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1F_tAAWeaponry;
typedef SDL_Integer  z_BasicTypes_1F_tAAWeaponry;

/*****
* SYNTYPE tLUWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1G_tLUWeaponry;
typedef SDL_Integer  z_BasicTypes_1G_tLUWeaponry;

/*****
* SYNTYPE tXCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1H_tXCoordinate;
typedef SDL_Integer  z_BasicTypes_1H_tXCoordinate;

/*****
* SYNTYPE tYCoordinate  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1I_tYCoordinate;
typedef SDL_Integer  z_BasicTypes_1I_tYCoordinate;

/*****
* SYNTYPE tFactorAcceleration  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1J_tFactorAcceleration;
typedef SDL_Real  z_BasicTypes_1J_tFactorAcceleration;

/*****
* SYNTYPE tShipId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1K_tShipId;
typedef SDL_Integer  z_BasicTypes_1K_tShipId;

/*****
* SYNTYPE tStrategyId  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
extern tSDLGenInfo ySDL_z_BasicTypes_1L_tStrategyId;
typedef SDL_Integer  z_BasicTypes_1L_tStrategyId;

/*****
* NEWTYPE tHeading  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0R_tHeading;
typedef XENUM_TYPE z_BasicTypes_0R_tHeading;
#define z_BasicTypes_0R0_NORTH 0
#define z_BasicTypes_0R1_NORTH_EAST 1
#define z_BasicTypes_0R2_EAST 2
#define z_BasicTypes_0R3_SOUTH_EAST 3
#define z_BasicTypes_0R4_SOUTH 4
#define z_BasicTypes_0R5_SOUTH_WEST 5
#define z_BasicTypes_0R6_WEST 6
#define z_BasicTypes_0R7_NORTH_WEST 7

/*****
* NEWTYPE tDeep  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0S_tDeep;
typedef XENUM_TYPE z_BasicTypes_0S_tDeep;
#define z_BasicTypes_0S0_LAND 0
#define z_BasicTypes_0S1_FLEET 1
#define z_BasicTypes_0S2_NORMAL 2
#define z_BasicTypes_0S3_DEEPLY 3
#define z_BasicTypes_0S4_VERY_DEEPLY 4

/*****
* NEWTYPE tNameWeaponry  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0T_tNameWeaponry;
typedef XENUM_TYPE z_BasicTypes_0T_tNameWeaponry;
#define z_BasicTypes_0T0_MISSILE 0
#define z_BasicTypes_0T1_TORPEDO 1
#define z_BasicTypes_0T2_SHELL 2
#define z_BasicTypes_0T3_REPAIR 3

/*****
* NEWTYPE tNameShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0U_tNameShip;
typedef XENUM_TYPE z_BasicTypes_0U_tNameShip;
#define z_BasicTypes_0U0_BATTLESHIP 0
#define z_BasicTypes_0U1_CRUISER 1
#define z_BasicTypes_0U2_DESTROYER 2
#define z_BasicTypes_0U3_MISSILE_CUTTER 3
#define z_BasicTypes_0U4_REPAIR_BOAT 4
#define z_BasicTypes_0U5_PATROL_BOAT 5

/*****
* NEWTYPE tHeadingChange  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
extern tSDLEnumInfo ySDL_z_BasicTypes_0V_tHeadingChange;
typedef XENUM_TYPE z_BasicTypes_0V_tHeadingChange;
#define z_BasicTypes_0V0_LEFT 0
#define z_BasicTypes_0V1_RIGHT 1

/*****
* NEWTYPE tCoordinates  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0W_tCoordinates;
typedef struct z_BasicTypes_0W_tCoordinates_s {
    z_BasicTypes_1H_tXCoordinate  x;
    z_BasicTypes_1I_tYCoordinate  y;
} z_BasicTypes_0W_tCoordinates;

/*****
* NEWTYPE tWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0X_tWeaponryCharacter;
typedef struct z_BasicTypes_0X_tWeaponryCharacter_s {
    z_BasicTypes_1C_tWCPower  Power;
    z_BasicTypes_1D_tWCRange  Range;
    z_BasicTypes_1E_tWCSpeed  Speed;
} z_BasicTypes_0X_tWeaponryCharacter;

/*****
* NEWTYPE tEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_10_tEnemyShip;
typedef struct z_BasicTypes_10_tEnemyShip_s {
    z_BasicTypes_1K_tShipId  ShipId;
    z_BasicTypes_1L_tStrategyId  StrategyId;
    z_BasicTypes_0U_tNameShip  TypeShip;
    z_BasicTypes_19_tSCMaxSpeed  Speed;
    z_BasicTypes_0R_tHeading  Heading;
    z_BasicTypes_0W_tCoordinates  Coordinates;
} z_BasicTypes_10_tEnemyShip;

/*****
* NEWTYPE tArrayWeaponryCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_11_tArrayWeaponryCharacter;
typedef struct {
    z_BasicTypes_0X_tWeaponryCharacter  A[4];
}  z_BasicTypes_11_tArrayWeaponryCharacter;

/*****
* NEWTYPE tArrayAmountAmmunition  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_13_tArrayAmountAmmunition;
typedef struct {
    z_BasicTypes_1F_tAAWeaponry  A[4];
}  z_BasicTypes_13_tArrayAmountAmmunition;

/*****
* NEWTYPE tArrayAmountLaunchUnit  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_14_tArrayAmountLaunchUnit;
typedef struct {
    z_BasicTypes_1G_tLUWeaponry  A[4];
}  z_BasicTypes_14_tArrayAmountLaunchUnit;

/*****
* NEWTYPE tStringEnemyShip  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_16_tStringEnemyShip;

typedef struct z_BasicTypes_16_tStringEnemyShip_ystruct *z_BasicTypes_16_tStringEnemyShip_yptr;
typedef struct z_BasicTypes_16_tStringEnemyShip_ystruct {
  z_BasicTypes_16_tStringEnemyShip_yptr Suc;
  z_BasicTypes_10_tEnemyShip Data;
} z_BasicTypes_16_tStringEnemyShip_yrec;
typedef struct {
  z_BasicTypes_16_tStringEnemyShip_yptr First;
  z_BasicTypes_16_tStringEnemyShip_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_16_tStringEnemyShip;

/*****
* NEWTYPE tStringShotsList  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_17_tStringShotsList;

typedef struct z_BasicTypes_17_tStringShotsList_ystruct *z_BasicTypes_17_tStringShotsList_yptr;
typedef struct z_BasicTypes_17_tStringShotsList_ystruct {
  z_BasicTypes_17_tStringShotsList_yptr Suc;
  z_BasicTypes_0W_tCoordinates Data;
} z_BasicTypes_17_tStringShotsList_yrec;
typedef struct {
  z_BasicTypes_17_tStringShotsList_yptr First;
  z_BasicTypes_17_tStringShotsList_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_17_tStringShotsList;

/*****
* NEWTYPE tShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),401(70,75),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0Y_tShipCurrentState;
typedef struct z_BasicTypes_0Y_tShipCurrentState_s {
    z_BasicTypes_1K_tShipId  ShipId;
    z_BasicTypes_1L_tStrategyId  StrategyId;
    z_BasicTypes_0U_tNameShip  TypeShip;
    z_BasicTypes_19_tSCMaxSpeed  Speed;
    z_BasicTypes_0R_tHeading  Heading;
    z_BasicTypes_1B_tSCMaxResource  Resource;
    z_BasicTypes_0W_tCoordinates  Coordinates;
    z_BasicTypes_13_tArrayAmountAmmunition  Ammunition;
    SDL_Integer  stepsSlowing;
    z_BasicTypes_1J_tFactorAcceleration  deceleration;
    SDL_Boolean  changeDirection;
    z_BasicTypes_0W_tCoordinates  fightCoordinates;
} z_BasicTypes_0Y_tShipCurrentState;

/*****
* NEWTYPE tShipCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
extern tSDLStructInfo ySDL_z_BasicTypes_0Z_tShipCharacter;
typedef struct z_BasicTypes_0Z_tShipCharacter_s {
    z_BasicTypes_18_tSCRange  Range;
    z_BasicTypes_19_tSCMaxSpeed  MaxSpeed;
    z_BasicTypes_1A_tSCMaxAcceleration  MaxAcceleration;
    z_BasicTypes_1B_tSCMaxResource  MaxResource;
    z_BasicTypes_13_tArrayAmountAmmunition  MaxAmmunition;
    z_BasicTypes_14_tArrayAmountLaunchUnit  MaxLaunchUnit;
    z_BasicTypes_0S_tDeep  MaxDeep;
} z_BasicTypes_0Z_tShipCharacter;

/*****
* NEWTYPE tArrayShipsCharacter  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
extern tSDLArrayInfo ySDL_z_BasicTypes_12_tArrayShipsCharacter;
typedef struct {
    z_BasicTypes_0Z_tShipCharacter  A[6];
}  z_BasicTypes_12_tArrayShipsCharacter;

/*****
* NEWTYPE tStringShipCurrentState  (TYPE section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
extern tSDLGenListInfo ySDL_z_BasicTypes_15_tStringShipCurrentState;

typedef struct z_BasicTypes_15_tStringShipCurrentState_ystruct *z_BasicTypes_15_tStringShipCurrentState_yptr;
typedef struct z_BasicTypes_15_tStringShipCurrentState_ystruct {
  z_BasicTypes_15_tStringShipCurrentState_yptr Suc;
  z_BasicTypes_0Y_tShipCurrentState Data;
} z_BasicTypes_15_tStringShipCurrentState_yrec;
typedef struct {
  z_BasicTypes_15_tStringShipCurrentState_yptr First;
  z_BasicTypes_15_tStringShipCurrentState_yptr Last;
  int Length;
  int IsAssigned;
} z_BasicTypes_15_tStringShipCurrentState;

/*****
* SYNTYPE tSCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_18_tSCRange;
#define ySrtN_z_BasicTypes_18_tSCRange  (&ySrtR_z_BasicTypes_18_tSCRange)
#endif

#define yAssF_z_BasicTypes_18_tSCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_18_tSCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_18_tSCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_18_tSCRange yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_18_tSCRange (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_18_tSCRange yTstA_z_BasicTypes_18_tSCRange (
  z_BasicTypes_18_tSCRange);
#else
#define yTstA_z_BasicTypes_18_tSCRange(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_18_tSCRange yTstI_z_BasicTypes_18_tSCRange (
  z_BasicTypes_18_tSCRange);
#else
#define yTstI_z_BasicTypes_18_tSCRange(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_18_tSCRange
#define ANY_z_BasicTypes_18_tSCRange (z_BasicTypes_18_tSCRange)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(100)+1))
#endif

/*****
* SYNTYPE tSCMaxSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_19_tSCMaxSpeed;
#define ySrtN_z_BasicTypes_19_tSCMaxSpeed  (&ySrtR_z_BasicTypes_19_tSCMaxSpeed)
#endif

#define yAssF_z_BasicTypes_19_tSCMaxSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_19_tSCMaxSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_19_tSCMaxSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_19_tSCMaxSpeed yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_19_tSCMaxSpeed (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_19_tSCMaxSpeed yTstA_z_BasicTypes_19_tSCMaxSpeed (
  z_BasicTypes_19_tSCMaxSpeed);
#else
#define yTstA_z_BasicTypes_19_tSCMaxSpeed(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_19_tSCMaxSpeed yTstI_z_BasicTypes_19_tSCMaxSpeed (
  z_BasicTypes_19_tSCMaxSpeed);
#else
#define yTstI_z_BasicTypes_19_tSCMaxSpeed(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_19_tSCMaxSpeed
#define ANY_z_BasicTypes_19_tSCMaxSpeed (z_BasicTypes_19_tSCMaxSpeed)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(10)+1))
#endif

/*****
* SYNTYPE tSCMaxAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1A_tSCMaxAcceleration;
#define ySrtN_z_BasicTypes_1A_tSCMaxAcceleration  (&ySrtR_z_BasicTypes_1A_tSCMaxAcceleration)
#endif

#define yAssF_z_BasicTypes_1A_tSCMaxAcceleration(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1A_tSCMaxAcceleration(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1A_tSCMaxAcceleration(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1A_tSCMaxAcceleration yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1A_tSCMaxAcceleration (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1A_tSCMaxAcceleration
  yTstA_z_BasicTypes_1A_tSCMaxAcceleration (z_BasicTypes_1A_tSCMaxAcceleration);
#else
#define yTstA_z_BasicTypes_1A_tSCMaxAcceleration(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1A_tSCMaxAcceleration
  yTstI_z_BasicTypes_1A_tSCMaxAcceleration (z_BasicTypes_1A_tSCMaxAcceleration);
#else
#define yTstI_z_BasicTypes_1A_tSCMaxAcceleration(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1A_tSCMaxAcceleration
#define ANY_z_BasicTypes_1A_tSCMaxAcceleration (z_BasicTypes_1A_tSCMaxAcceleration)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(5)+1))
#endif

/*****
* SYNTYPE tSCMaxResource  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),278(20,40),10,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1B_tSCMaxResource;
#define ySrtN_z_BasicTypes_1B_tSCMaxResource  (&ySrtR_z_BasicTypes_1B_tSCMaxResource)
#endif

#define yAssF_z_BasicTypes_1B_tSCMaxResource(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1B_tSCMaxResource(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1B_tSCMaxResource(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1B_tSCMaxResource yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1B_tSCMaxResource (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1B_tSCMaxResource yTstA_z_BasicTypes_1B_tSCMaxResource (
  z_BasicTypes_1B_tSCMaxResource);
#else
#define yTstA_z_BasicTypes_1B_tSCMaxResource(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1B_tSCMaxResource yTstI_z_BasicTypes_1B_tSCMaxResource (
  z_BasicTypes_1B_tSCMaxResource);
#else
#define yTstI_z_BasicTypes_1B_tSCMaxResource(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1B_tSCMaxResource
#define ANY_z_BasicTypes_1B_tSCMaxResource (z_BasicTypes_1B_tSCMaxResource)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(100)+1))
#endif

/*****
* SYNTYPE tWCPower  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1C_tWCPower;
#define ySrtN_z_BasicTypes_1C_tWCPower  (&ySrtR_z_BasicTypes_1C_tWCPower)
#endif

#define yAssF_z_BasicTypes_1C_tWCPower(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1C_tWCPower(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1C_tWCPower(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1C_tWCPower yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1C_tWCPower (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1C_tWCPower yTstA_z_BasicTypes_1C_tWCPower (
  z_BasicTypes_1C_tWCPower);
#else
#define yTstA_z_BasicTypes_1C_tWCPower(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1C_tWCPower yTstI_z_BasicTypes_1C_tWCPower (
  z_BasicTypes_1C_tWCPower);
#else
#define yTstI_z_BasicTypes_1C_tWCPower(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1C_tWCPower
#define ANY_z_BasicTypes_1C_tWCPower (z_BasicTypes_1C_tWCPower)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(30)+1))
#endif

/*****
* SYNTYPE tWCRange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1D_tWCRange;
#define ySrtN_z_BasicTypes_1D_tWCRange  (&ySrtR_z_BasicTypes_1D_tWCRange)
#endif

#define yAssF_z_BasicTypes_1D_tWCRange(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1D_tWCRange(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1D_tWCRange(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1D_tWCRange yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1D_tWCRange (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1D_tWCRange yTstA_z_BasicTypes_1D_tWCRange (
  z_BasicTypes_1D_tWCRange);
#else
#define yTstA_z_BasicTypes_1D_tWCRange(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1D_tWCRange yTstI_z_BasicTypes_1D_tWCRange (
  z_BasicTypes_1D_tWCRange);
#else
#define yTstI_z_BasicTypes_1D_tWCRange(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1D_tWCRange
#define ANY_z_BasicTypes_1D_tWCRange (z_BasicTypes_1D_tWCRange)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(50)+1))
#endif

/*****
* SYNTYPE tWCSpeed  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),188(80,40),7,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1E_tWCSpeed;
#define ySrtN_z_BasicTypes_1E_tWCSpeed  (&ySrtR_z_BasicTypes_1E_tWCSpeed)
#endif

#define yAssF_z_BasicTypes_1E_tWCSpeed(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1E_tWCSpeed(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1E_tWCSpeed(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1E_tWCSpeed yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1E_tWCSpeed (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1E_tWCSpeed yTstA_z_BasicTypes_1E_tWCSpeed (
  z_BasicTypes_1E_tWCSpeed);
#else
#define yTstA_z_BasicTypes_1E_tWCSpeed(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1E_tWCSpeed yTstI_z_BasicTypes_1E_tWCSpeed (
  z_BasicTypes_1E_tWCSpeed);
#else
#define yTstI_z_BasicTypes_1E_tWCSpeed(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1E_tWCSpeed
#define ANY_z_BasicTypes_1E_tWCSpeed (z_BasicTypes_1E_tWCSpeed)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(30)+1))
#endif

/*****
* SYNTYPE tAAWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1F_tAAWeaponry;
#define ySrtN_z_BasicTypes_1F_tAAWeaponry  (&ySrtR_z_BasicTypes_1F_tAAWeaponry)
#endif

#define yAssF_z_BasicTypes_1F_tAAWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1F_tAAWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1F_tAAWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1F_tAAWeaponry yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1F_tAAWeaponry (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1F_tAAWeaponry yTstA_z_BasicTypes_1F_tAAWeaponry (
  z_BasicTypes_1F_tAAWeaponry);
#else
#define yTstA_z_BasicTypes_1F_tAAWeaponry(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1F_tAAWeaponry yTstI_z_BasicTypes_1F_tAAWeaponry (
  z_BasicTypes_1F_tAAWeaponry);
#else
#define yTstI_z_BasicTypes_1F_tAAWeaponry(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1F_tAAWeaponry
#define ANY_z_BasicTypes_1F_tAAWeaponry (z_BasicTypes_1F_tAAWeaponry)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(30)+1))
#endif

/*****
* SYNTYPE tLUWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),281(80,75),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1G_tLUWeaponry;
#define ySrtN_z_BasicTypes_1G_tLUWeaponry  (&ySrtR_z_BasicTypes_1G_tLUWeaponry)
#endif

#define yAssF_z_BasicTypes_1G_tLUWeaponry(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1G_tLUWeaponry(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1G_tLUWeaponry(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1G_tLUWeaponry yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1G_tLUWeaponry (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1G_tLUWeaponry yTstA_z_BasicTypes_1G_tLUWeaponry (
  z_BasicTypes_1G_tLUWeaponry);
#else
#define yTstA_z_BasicTypes_1G_tLUWeaponry(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1G_tLUWeaponry yTstI_z_BasicTypes_1G_tLUWeaponry (
  z_BasicTypes_1G_tLUWeaponry);
#else
#define yTstI_z_BasicTypes_1G_tLUWeaponry(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1G_tLUWeaponry
#define ANY_z_BasicTypes_1G_tLUWeaponry (z_BasicTypes_1G_tLUWeaponry)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(5)+1))
#endif

/*****
* SYNTYPE tXCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1H_tXCoordinate;
#define ySrtN_z_BasicTypes_1H_tXCoordinate  (&ySrtR_z_BasicTypes_1H_tXCoordinate)
#endif

#define yAssF_z_BasicTypes_1H_tXCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1H_tXCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1H_tXCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1H_tXCoordinate yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1H_tXCoordinate (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1H_tXCoordinate yTstA_z_BasicTypes_1H_tXCoordinate (
  z_BasicTypes_1H_tXCoordinate);
#else
#define yTstA_z_BasicTypes_1H_tXCoordinate(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1H_tXCoordinate yTstI_z_BasicTypes_1H_tXCoordinate (
  z_BasicTypes_1H_tXCoordinate);
#else
#define yTstI_z_BasicTypes_1H_tXCoordinate(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1H_tXCoordinate
#define ANY_z_BasicTypes_1H_tXCoordinate (z_BasicTypes_1H_tXCoordinate)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(200)+1))
#endif

/*****
* SYNTYPE tYCoordinate  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),290(20,85),4,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1I_tYCoordinate;
#define ySrtN_z_BasicTypes_1I_tYCoordinate  (&ySrtR_z_BasicTypes_1I_tYCoordinate)
#endif

#define yAssF_z_BasicTypes_1I_tYCoordinate(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1I_tYCoordinate(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1I_tYCoordinate(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1I_tYCoordinate yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1I_tYCoordinate (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1I_tYCoordinate yTstA_z_BasicTypes_1I_tYCoordinate (
  z_BasicTypes_1I_tYCoordinate);
#else
#define yTstA_z_BasicTypes_1I_tYCoordinate(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1I_tYCoordinate yTstI_z_BasicTypes_1I_tYCoordinate (
  z_BasicTypes_1I_tYCoordinate);
#else
#define yTstI_z_BasicTypes_1I_tYCoordinate(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1I_tYCoordinate
#define ANY_z_BasicTypes_1I_tYCoordinate (z_BasicTypes_1I_tYCoordinate)(SDL_INTEGER_LIT(0) + \
  GETINTRAND%(SDL_INTEGER_LIT(100)+1))
#endif

/*****
* SYNTYPE tFactorAcceleration  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),374(80,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1J_tFactorAcceleration;
#define ySrtN_z_BasicTypes_1J_tFactorAcceleration  (&ySrtR_z_BasicTypes_1J_tFactorAcceleration)
#endif

#define yAssF_z_BasicTypes_1J_tFactorAcceleration(V,E,A)  yAssF_SDL_Real(V,E,A)
#define yEqF_z_BasicTypes_1J_tFactorAcceleration(Expr1,Expr2)  yEqF_SDL_Real(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1J_tFactorAcceleration(Expr1,Expr2)  yNEqF_SDL_Real(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1J_tFactorAcceleration yMkAddr_SDL_Real
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1J_tFactorAcceleration (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1J_tFactorAcceleration
  yTstA_z_BasicTypes_1J_tFactorAcceleration (
  z_BasicTypes_1J_tFactorAcceleration);
#else
#define yTstA_z_BasicTypes_1J_tFactorAcceleration(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1J_tFactorAcceleration
  yTstI_z_BasicTypes_1J_tFactorAcceleration (
  z_BasicTypes_1J_tFactorAcceleration);
#else
#define yTstI_z_BasicTypes_1J_tFactorAcceleration(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1J_tFactorAcceleration
#define ANY_z_BasicTypes_1J_tFactorAcceleration ANY_for_syntype_tFactorAcceleration_not_implemented
#endif

/*****
* SYNTYPE tShipId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),407(20,110),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1K_tShipId;
#define ySrtN_z_BasicTypes_1K_tShipId  (&ySrtR_z_BasicTypes_1K_tShipId)
#endif

#define yAssF_z_BasicTypes_1K_tShipId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1K_tShipId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1K_tShipId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1K_tShipId yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1K_tShipId (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1K_tShipId yTstA_z_BasicTypes_1K_tShipId (
  z_BasicTypes_1K_tShipId);
#else
#define yTstA_z_BasicTypes_1K_tShipId(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1K_tShipId yTstI_z_BasicTypes_1K_tShipId (
  z_BasicTypes_1K_tShipId);
#else
#define yTstI_z_BasicTypes_1K_tShipId(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1K_tShipId
#define ANY_z_BasicTypes_1K_tShipId (z_BasicTypes_1K_tShipId)(SDL_INTEGER_LIT(1) + \
  GETINTRAND%(SDL_INTEGER_LIT(18) - SDL_INTEGER_LIT(1)+1))
#endif

/*****
* SYNTYPE tStrategyId  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(1),413(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_1L_tStrategyId;
#define ySrtN_z_BasicTypes_1L_tStrategyId  (&ySrtR_z_BasicTypes_1L_tStrategyId)
#endif

#define yAssF_z_BasicTypes_1L_tStrategyId(V,E,A)  yAssF_SDL_Integer(V,E,A)
#define yEqF_z_BasicTypes_1L_tStrategyId(Expr1,Expr2)  yEqF_SDL_Integer(Expr1,Expr2)
#define yNEqF_z_BasicTypes_1L_tStrategyId(Expr1,Expr2)  yNEqF_SDL_Integer(Expr1,Expr2)
#define yMkAddr_z_BasicTypes_1L_tStrategyId yMkAddr_SDL_Integer
#ifdef XTESTF
extern xbool  yTest_z_BasicTypes_1L_tStrategyId (void *);
#endif
#ifdef XERANGE
extern z_BasicTypes_1L_tStrategyId yTstA_z_BasicTypes_1L_tStrategyId (
  z_BasicTypes_1L_tStrategyId);
#else
#define yTstA_z_BasicTypes_1L_tStrategyId(yExpr)  yExpr
#endif
#ifdef XEINDEX
extern z_BasicTypes_1L_tStrategyId yTstI_z_BasicTypes_1L_tStrategyId (
  z_BasicTypes_1L_tStrategyId);
#else
#define yTstI_z_BasicTypes_1L_tStrategyId(yExpr)  yExpr
#endif
#ifndef ANY_z_BasicTypes_1L_tStrategyId
#define ANY_z_BasicTypes_1L_tStrategyId (z_BasicTypes_1L_tStrategyId)(SDL_INTEGER_LIT(1) + \
  GETINTRAND%(SDL_INTEGER_LIT(2) - SDL_INTEGER_LIT(1)+1))
#endif

/*****
* NEWTYPE tHeading  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0R_tHeading;
#define ySrtN_z_BasicTypes_0R_tHeading  (&ySrtR_z_BasicTypes_0R_tHeading)
#endif

#define yAssF_z_BasicTypes_0R_tHeading(V,E,A)  V = E
#define yEqF_z_BasicTypes_0R_tHeading(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0R_tHeading(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0R_tHeading yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0R_tHeading
#define ANY_z_BasicTypes_0R_tHeading (z_BasicTypes_0R_tHeading)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0R7_NORTH_WEST)+1))
#endif
#define z_BasicTypes_0RD_copy(P)  P

/*****
* OPERATOR h2i
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RE_h2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RE_h2i;
#define yPrdN_z_BasicTypes_0RE_h2i  (&yPrdR_z_BasicTypes_0RE_h2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RE_h2i  9
extern char * yRef_z_BasicTypes_0RE_h2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),15,10) */
    z_BasicTypes_0R_tHeading z_BasicTypes_0RE0_lit;
    SDL_Integer *z_BasicTypes_0RE_ProcedureResult;
    z_BasicTypes_0R_tHeading  yDcn_z_BasicTypes_0R_tHeading;
} yVDef_z_BasicTypes_0RE_h2i;
typedef yVDef_z_BasicTypes_0RE_h2i  *yVDP_z_BasicTypes_0RE_h2i;
extern void yFree_z_BasicTypes_0RE_h2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RE0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR h2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RE_ProcedureResult;
#endif

/*****
* OPERATOR i2h
* <<PACKAGE BasicTypes/TYPE tHeading>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),17,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0RF_i2h)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0RF_i2h;
#define yPrdN_z_BasicTypes_0RF_i2h  (&yPrdR_z_BasicTypes_0RF_i2h)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0RF_i2h  9
extern char * yRef_z_BasicTypes_0RF_i2h (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),18,10) */
    SDL_Integer z_BasicTypes_0RF0_int;
    z_BasicTypes_0R_tHeading *z_BasicTypes_0RF_ProcedureResult;
} yVDef_z_BasicTypes_0RF_i2h;
typedef yVDef_z_BasicTypes_0RF_i2h  *yVDP_z_BasicTypes_0RF_i2h;
extern void yFree_z_BasicTypes_0RF_i2h (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),254(20,40),18,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RF0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tHeading/OPERATOR i2h>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0RF_ProcedureResult;
#endif

/*****
* NEWTYPE tDeep  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0S_tDeep;
#define ySrtN_z_BasicTypes_0S_tDeep  (&ySrtR_z_BasicTypes_0S_tDeep)
#endif

#define yAssF_z_BasicTypes_0S_tDeep(V,E,A)  V = E
#define yEqF_z_BasicTypes_0S_tDeep(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0S_tDeep(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0S_tDeep yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0S_tDeep
#define ANY_z_BasicTypes_0S_tDeep (z_BasicTypes_0S_tDeep)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0S4_VERY_DEEPLY)+1))
#endif
#define z_BasicTypes_0SA_copy(P)  P

/*****
* OPERATOR d2i
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),11,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SB_d2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SB_d2i;
#define yPrdN_z_BasicTypes_0SB_d2i  (&yPrdR_z_BasicTypes_0SB_d2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SB_d2i  6
extern char * yRef_z_BasicTypes_0SB_d2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),12,10) */
    z_BasicTypes_0S_tDeep z_BasicTypes_0SB0_lit;
    SDL_Integer *z_BasicTypes_0SB_ProcedureResult;
    z_BasicTypes_0S_tDeep  yDcn_z_BasicTypes_0S_tDeep;
} yVDef_z_BasicTypes_0SB_d2i;
typedef yVDef_z_BasicTypes_0SB_d2i  *yVDP_z_BasicTypes_0SB_d2i;
extern void yFree_z_BasicTypes_0SB_d2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),12,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR d2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SB_ProcedureResult;
#endif

/*****
* OPERATOR i2d
* <<PACKAGE BasicTypes/TYPE tDeep>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),14,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0SC_i2d)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0SC_i2d;
#define yPrdN_z_BasicTypes_0SC_i2d  (&yPrdR_z_BasicTypes_0SC_i2d)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0SC_i2d  6
extern char * yRef_z_BasicTypes_0SC_i2d (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),15,10) */
    SDL_Integer z_BasicTypes_0SC0_int;
    z_BasicTypes_0S_tDeep *z_BasicTypes_0SC_ProcedureResult;
} yVDef_z_BasicTypes_0SC_i2d;
typedef yVDef_z_BasicTypes_0SC_i2d  *yVDP_z_BasicTypes_0SC_i2d;
extern void yFree_z_BasicTypes_0SC_i2d (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),182(70,40),15,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SC0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tDeep/OPERATOR i2d>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0SC_ProcedureResult;
#endif

/*****
* NEWTYPE tNameWeaponry  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0T_tNameWeaponry;
#define ySrtN_z_BasicTypes_0T_tNameWeaponry  (&ySrtR_z_BasicTypes_0T_tNameWeaponry)
#endif

#define yAssF_z_BasicTypes_0T_tNameWeaponry(V,E,A)  V = E
#define yEqF_z_BasicTypes_0T_tNameWeaponry(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0T_tNameWeaponry(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0T_tNameWeaponry yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0T_tNameWeaponry
#define ANY_z_BasicTypes_0T_tNameWeaponry (z_BasicTypes_0T_tNameWeaponry)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0T3_REPAIR)+1))
#endif
#define z_BasicTypes_0T9_copy(P)  P

/*****
* OPERATOR nw2i
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),10,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0TA_nw2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0TA_nw2i;
#define yPrdN_z_BasicTypes_0TA_nw2i  (&yPrdR_z_BasicTypes_0TA_nw2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0TA_nw2i  5
extern char * yRef_z_BasicTypes_0TA_nw2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),11,10) */
    z_BasicTypes_0T_tNameWeaponry z_BasicTypes_0TA0_lit;
    SDL_Integer *z_BasicTypes_0TA_ProcedureResult;
    z_BasicTypes_0T_tNameWeaponry  yDcn_z_BasicTypes_0T_tNameWeaponry;
} yVDef_z_BasicTypes_0TA_nw2i;
typedef yVDef_z_BasicTypes_0TA_nw2i  *yVDP_z_BasicTypes_0TA_nw2i;
extern void yFree_z_BasicTypes_0TA_nw2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),11,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TA0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR nw2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TA_ProcedureResult;
#endif

/*****
* OPERATOR i2nw
* <<PACKAGE BasicTypes/TYPE tNameWeaponry>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),13,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0TB_i2nw)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0TB_i2nw;
#define yPrdN_z_BasicTypes_0TB_i2nw  (&yPrdR_z_BasicTypes_0TB_i2nw)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0TB_i2nw  5
extern char * yRef_z_BasicTypes_0TB_i2nw (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),14,10) */
    SDL_Integer z_BasicTypes_0TB0_int;
    z_BasicTypes_0T_tNameWeaponry *z_BasicTypes_0TB_ProcedureResult;
} yVDef_z_BasicTypes_0TB_i2nw;
typedef yVDef_z_BasicTypes_0TB_i2nw  *yVDP_z_BasicTypes_0TB_i2nw;
extern void yFree_z_BasicTypes_0TB_i2nw (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),179(20,115),14,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TB0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameWeaponry/OPERATOR i2nw>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0TB_ProcedureResult;
#endif

/*****
* NEWTYPE tNameShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0U_tNameShip;
#define ySrtN_z_BasicTypes_0U_tNameShip  (&ySrtR_z_BasicTypes_0U_tNameShip)
#endif

#define yAssF_z_BasicTypes_0U_tNameShip(V,E,A)  V = E
#define yEqF_z_BasicTypes_0U_tNameShip(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0U_tNameShip(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0U_tNameShip yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0U_tNameShip
#define ANY_z_BasicTypes_0U_tNameShip (z_BasicTypes_0U_tNameShip)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0U5_PATROL_BOAT)+1))
#endif
#define z_BasicTypes_0UB_copy(P)  P

/*****
* OPERATOR ns2i
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),12,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0UC_ns2i)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0UC_ns2i;
#define yPrdN_z_BasicTypes_0UC_ns2i  (&yPrdR_z_BasicTypes_0UC_ns2i)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0UC_ns2i  7
extern char * yRef_z_BasicTypes_0UC_ns2i (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),13,10) */
    z_BasicTypes_0U_tNameShip z_BasicTypes_0UC0_lit;
    SDL_Integer *z_BasicTypes_0UC_ProcedureResult;
    z_BasicTypes_0U_tNameShip  yDcn_z_BasicTypes_0U_tNameShip;
} yVDef_z_BasicTypes_0UC_ns2i;
typedef yVDef_z_BasicTypes_0UC_ns2i  *yVDP_z_BasicTypes_0UC_ns2i;
extern void yFree_z_BasicTypes_0UC_ns2i (void *);

/*****
* FPAR lit
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),13,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0UC0_lit;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR ns2i>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0UC_ProcedureResult;
#endif

/*****
* OPERATOR i2ns
* <<PACKAGE BasicTypes/TYPE tNameShip>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),15,12)
******/
YPRD_PROTOTYPE(z_BasicTypes_0UD_i2ns)
extern XCONST struct xPrdIdStruct yPrdR_z_BasicTypes_0UD_i2ns;
#define yPrdN_z_BasicTypes_0UD_i2ns  (&yPrdR_z_BasicTypes_0UD_i2ns)
#ifdef XBREAKBEFORE
#define ySym_z_BasicTypes_0UD_i2ns  7
extern char * yRef_z_BasicTypes_0UD_i2ns (int, xSymbolType *);
#endif
typedef struct {
    PROCEDURE_VARS
                /* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),16,10) */
    SDL_Integer z_BasicTypes_0UD0_int;
    z_BasicTypes_0U_tNameShip *z_BasicTypes_0UD_ProcedureResult;
} yVDef_z_BasicTypes_0UD_i2ns;
typedef yVDef_z_BasicTypes_0UD_i2ns  *yVDP_z_BasicTypes_0UD_i2ns;
extern void yFree_z_BasicTypes_0UD_i2ns (void *);

/*****
* FPAR int
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),248(80,115),16,10)
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0UD0_int;
#endif

/*****
* FPAR operatorresult!
* <<PACKAGE BasicTypes/TYPE tNameShip/OPERATOR i2ns>>
*
******/
#ifndef XOPTFPAR
extern XCONST struct xVarIdStruct yVarR_z_BasicTypes_0UD_ProcedureResult;
#endif

/*****
* NEWTYPE tHeadingChange  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(2),359(20,175),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0V_tHeadingChange;
#define ySrtN_z_BasicTypes_0V_tHeadingChange  (&ySrtR_z_BasicTypes_0V_tHeadingChange)
#endif

#define yAssF_z_BasicTypes_0V_tHeadingChange(V,E,A)  V = E
#define yEqF_z_BasicTypes_0V_tHeadingChange(Expr1,Expr2)  (Expr1) == (Expr2)
#define yNEqF_z_BasicTypes_0V_tHeadingChange(Expr1,Expr2)  (Expr1) != (Expr2)
#define yMkAddr_z_BasicTypes_0V_tHeadingChange yMkAddr_GenericShortEnum
#ifndef ANY_z_BasicTypes_0V_tHeadingChange
#define ANY_z_BasicTypes_0V_tHeadingChange (z_BasicTypes_0V_tHeadingChange)(0 + \
  GETINTRAND%((int)(z_BasicTypes_0V1_RIGHT)+1))
#endif
#define z_BasicTypes_0V5_copy(P)  P

/*****
* NEWTYPE tCoordinates  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),287(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0W_tCoordinates;
#define ySrtN_z_BasicTypes_0W_tCoordinates  (&ySrtR_z_BasicTypes_0W_tCoordinates)
#endif

#define yAssF_z_BasicTypes_0W_tCoordinates(V,E,A)  V = *(z_BasicTypes_0W_tCoordinates *)(E)
#define yEq_z_BasicTypes_0W_tCoordinates(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0W_tCoordinates)
#define yEqF_z_BasicTypes_0W_tCoordinates(Expr1,Expr2)  yEq_z_BasicTypes_0W_tCoordinates(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0W_tCoordinates(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0W_tCoordinates(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0W_tCoordinates
#define ANY_z_BasicTypes_0W_tCoordinates(R) (z_BasicTypes_0W_tCoordinates *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0W_tCoordinates)
#endif
#define z_BasicTypes_0W3_copy(P)  P

/*****
* NEWTYPE tWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),146(20,60),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0X_tWeaponryCharacter;
#define ySrtN_z_BasicTypes_0X_tWeaponryCharacter  (&ySrtR_z_BasicTypes_0X_tWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_0X_tWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_0X_tWeaponryCharacter *)(E)
#define yEq_z_BasicTypes_0X_tWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0X_tWeaponryCharacter)
#define yEqF_z_BasicTypes_0X_tWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0X_tWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0X_tWeaponryCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0X_tWeaponryCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0X_tWeaponryCharacter
#define ANY_z_BasicTypes_0X_tWeaponryCharacter(R) (z_BasicTypes_0X_tWeaponryCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0X_tWeaponryCharacter)
#endif
#define z_BasicTypes_0X3_copy(P)  P

/*****
* NEWTYPE tShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),401(70,75),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Y_tShipCurrentState;
#define ySrtN_z_BasicTypes_0Y_tShipCurrentState  (&ySrtR_z_BasicTypes_0Y_tShipCurrentState)
#endif

#define yAssF_z_BasicTypes_0Y_tShipCurrentState(V,E,A)  V = *(z_BasicTypes_0Y_tShipCurrentState *)(E)
#define yEq_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Y_tShipCurrentState)
#define yEqF_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0Y_tShipCurrentState(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0Y_tShipCurrentState
#define ANY_z_BasicTypes_0Y_tShipCurrentState(R) (z_BasicTypes_0Y_tShipCurrentState *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0Y_tShipCurrentState)
#endif
#define z_BasicTypes_0Y03_copy(P)  P

/*****
* NEWTYPE tShipCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),251(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_0Z_tShipCharacter;
#define ySrtN_z_BasicTypes_0Z_tShipCharacter  (&ySrtR_z_BasicTypes_0Z_tShipCharacter)
#endif

#define yAssF_z_BasicTypes_0Z_tShipCharacter(V,E,A)  V = *(z_BasicTypes_0Z_tShipCharacter *)(E)
#define yEq_z_BasicTypes_0Z_tShipCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_0Z_tShipCharacter)
#define yEqF_z_BasicTypes_0Z_tShipCharacter(Expr1,Expr2)  yEq_z_BasicTypes_0Z_tShipCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_0Z_tShipCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_0Z_tShipCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_0Z_tShipCharacter
#define ANY_z_BasicTypes_0Z_tShipCharacter(R) (z_BasicTypes_0Z_tShipCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_0Z_tShipCharacter)
#endif
#define z_BasicTypes_0Z3_copy(P)  P

/*****
* NEWTYPE tEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(3),446(20,165),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_10_tEnemyShip;
#define ySrtN_z_BasicTypes_10_tEnemyShip  (&ySrtR_z_BasicTypes_10_tEnemyShip)
#endif

#define yAssF_z_BasicTypes_10_tEnemyShip(V,E,A)  V = *(z_BasicTypes_10_tEnemyShip *)(E)
#define yEq_z_BasicTypes_10_tEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_10_tEnemyShip)
#define yEqF_z_BasicTypes_10_tEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_10_tEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_10_tEnemyShip(Expr1,Expr2)  ( ! yEq_z_BasicTypes_10_tEnemyShip(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_10_tEnemyShip
#define ANY_z_BasicTypes_10_tEnemyShip(R) (z_BasicTypes_10_tEnemyShip *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_10_tEnemyShip)
#endif
#define z_BasicTypes_103_copy(P)  P

/*****
* NEWTYPE tArrayWeaponryCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),215(20,40),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_11_tArrayWeaponryCharacter;
#define ySrtN_z_BasicTypes_11_tArrayWeaponryCharacter  (&ySrtR_z_BasicTypes_11_tArrayWeaponryCharacter)
#endif

#define yAssF_z_BasicTypes_11_tArrayWeaponryCharacter(V,E,A)  V = *(z_BasicTypes_11_tArrayWeaponryCharacter *)(E)
#define yEq_z_BasicTypes_11_tArrayWeaponryCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_11_tArrayWeaponryCharacter)
#define yEqF_z_BasicTypes_11_tArrayWeaponryCharacter(Expr1,Expr2)  yEq_z_BasicTypes_11_tArrayWeaponryCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_11_tArrayWeaponryCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_11_tArrayWeaponryCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_11_tArrayWeaponryCharacter
#define ANY_z_BasicTypes_11_tArrayWeaponryCharacter(R) (z_BasicTypes_11_tArrayWeaponryCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_11_tArrayWeaponryCharacter)
#endif
#define z_BasicTypes_116_copy(P)  P

/*****
* NEWTYPE tArrayShipsCharacter  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),284(20,55),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_12_tArrayShipsCharacter;
#define ySrtN_z_BasicTypes_12_tArrayShipsCharacter  (&ySrtR_z_BasicTypes_12_tArrayShipsCharacter)
#endif

#define yAssF_z_BasicTypes_12_tArrayShipsCharacter(V,E,A)  V = *(z_BasicTypes_12_tArrayShipsCharacter *)(E)
#define yEq_z_BasicTypes_12_tArrayShipsCharacter(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_12_tArrayShipsCharacter)
#define yEqF_z_BasicTypes_12_tArrayShipsCharacter(Expr1,Expr2)  yEq_z_BasicTypes_12_tArrayShipsCharacter(Expr1,Expr2)
#define yNEqF_z_BasicTypes_12_tArrayShipsCharacter(Expr1,Expr2)  ( ! yEq_z_BasicTypes_12_tArrayShipsCharacter(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_12_tArrayShipsCharacter
#define ANY_z_BasicTypes_12_tArrayShipsCharacter(R) (z_BasicTypes_12_tArrayShipsCharacter *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_12_tArrayShipsCharacter)
#endif
#define z_BasicTypes_126_copy(P)  P

/*****
* NEWTYPE tArrayAmountAmmunition  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),344(20,70),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_13_tArrayAmountAmmunition;
#define ySrtN_z_BasicTypes_13_tArrayAmountAmmunition  (&ySrtR_z_BasicTypes_13_tArrayAmountAmmunition)
#endif

#define yAssF_z_BasicTypes_13_tArrayAmountAmmunition(V,E,A)  V = *(z_BasicTypes_13_tArrayAmountAmmunition *)(E)
#define yEq_z_BasicTypes_13_tArrayAmountAmmunition(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tArrayAmountAmmunition)
#define yEqF_z_BasicTypes_13_tArrayAmountAmmunition(Expr1,Expr2)  yEq_z_BasicTypes_13_tArrayAmountAmmunition(Expr1,Expr2)
#define yNEqF_z_BasicTypes_13_tArrayAmountAmmunition(Expr1,Expr2)  ( ! yEq_z_BasicTypes_13_tArrayAmountAmmunition(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_13_tArrayAmountAmmunition
#define ANY_z_BasicTypes_13_tArrayAmountAmmunition(R) (z_BasicTypes_13_tArrayAmountAmmunition *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_13_tArrayAmountAmmunition)
#endif
#define z_BasicTypes_136_copy(P)  P

/*****
* NEWTYPE tArrayAmountLaunchUnit  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),341(20,85),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_14_tArrayAmountLaunchUnit;
#define ySrtN_z_BasicTypes_14_tArrayAmountLaunchUnit  (&ySrtR_z_BasicTypes_14_tArrayAmountLaunchUnit)
#endif

#define yAssF_z_BasicTypes_14_tArrayAmountLaunchUnit(V,E,A)  V = *(z_BasicTypes_14_tArrayAmountLaunchUnit *)(E)
#define yEq_z_BasicTypes_14_tArrayAmountLaunchUnit(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tArrayAmountLaunchUnit)
#define yEqF_z_BasicTypes_14_tArrayAmountLaunchUnit(Expr1,Expr2)  yEq_z_BasicTypes_14_tArrayAmountLaunchUnit(Expr1,Expr2)
#define yNEqF_z_BasicTypes_14_tArrayAmountLaunchUnit(Expr1,Expr2)  ( ! yEq_z_BasicTypes_14_tArrayAmountLaunchUnit(Expr1,Expr2) )
#ifndef ANY_z_BasicTypes_14_tArrayAmountLaunchUnit
#define ANY_z_BasicTypes_14_tArrayAmountLaunchUnit(R) (z_BasicTypes_14_tArrayAmountLaunchUnit *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_14_tArrayAmountLaunchUnit)
#endif
#define z_BasicTypes_146_copy(P)  P

/*****
* NEWTYPE tStringShipCurrentState  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),404(20,100),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_15_tStringShipCurrentState;
#define ySrtN_z_BasicTypes_15_tStringShipCurrentState  (&ySrtR_z_BasicTypes_15_tStringShipCurrentState)
#endif

#define yEmptystring_z_BasicTypes_15_tStringShipCurrentState(Result) GenString_Emptystring(&ySDL_z_BasicTypes_15_tStringShipCurrentState,Result)
#define yMkString_z_BasicTypes_15_tStringShipCurrentState(P1,Result) (z_BasicTypes_15_tStringShipCurrentState *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_15_tStringShipCurrentState,(xString_Type *)Result)
#define yLength_z_BasicTypes_15_tStringShipCurrentState(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShipCurrentState)
#define yFirst_z_BasicTypes_15_tStringShipCurrentState(P1,Result) (z_BasicTypes_0Y_tShipCurrentState*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShipCurrentState,Result)
#define yLast_z_BasicTypes_15_tStringShipCurrentState(P1,Result) (z_BasicTypes_0Y_tShipCurrentState*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_15_tStringShipCurrentState,Result)
#define yConcat_z_BasicTypes_15_tStringShipCurrentState(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_15_tStringShipCurrentState,(xString_Type *)Result)
#define ySubString_z_BasicTypes_15_tStringShipCurrentState(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_15_tStringShipCurrentState,(xString_Type *)Result)
#define yAppend_z_BasicTypes_15_tStringShipCurrentState(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_15_tStringShipCurrentState)
#define z_BasicTypes_150_empty yEmptystring_z_BasicTypes_15_tStringShipCurrentState

#define yAss_z_BasicTypes_15_tStringShipCurrentState(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShipCurrentState)
#define yAssF_z_BasicTypes_15_tStringShipCurrentState(V,E,A)  yAss_z_BasicTypes_15_tStringShipCurrentState(&(V),E,A)
#define yEq_z_BasicTypes_15_tStringShipCurrentState(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShipCurrentState)
#define yEqF_z_BasicTypes_15_tStringShipCurrentState(Expr1,Expr2)  yEq_z_BasicTypes_15_tStringShipCurrentState(Expr1,Expr2)
#define yNEqF_z_BasicTypes_15_tStringShipCurrentState(Expr1,Expr2)  ( ! yEq_z_BasicTypes_15_tStringShipCurrentState(Expr1,Expr2) )
#define yFree_z_BasicTypes_15_tStringShipCurrentState(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShipCurrentState)
#define yExtr_z_BasicTypes_15_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0Y_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringShipCurrentState))
#define yAddr_z_BasicTypes_15_tStringShipCurrentState(V1,V2) ((z_BasicTypes_0Y_tShipCurrentState *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_15_tStringShipCurrentState))
#ifndef ANY_z_BasicTypes_15_tStringShipCurrentState
#define ANY_z_BasicTypes_15_tStringShipCurrentState(R) (z_BasicTypes_15_tStringShipCurrentState *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_15_tStringShipCurrentState)
#endif
#define z_BasicTypes_15E_copy(P)  P

/*****
* NEWTYPE tStringEnemyShip  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),449(20,115),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_16_tStringEnemyShip;
#define ySrtN_z_BasicTypes_16_tStringEnemyShip  (&ySrtR_z_BasicTypes_16_tStringEnemyShip)
#endif

#define yEmptystring_z_BasicTypes_16_tStringEnemyShip(Result) GenString_Emptystring(&ySDL_z_BasicTypes_16_tStringEnemyShip,Result)
#define yMkString_z_BasicTypes_16_tStringEnemyShip(P1,Result) (z_BasicTypes_16_tStringEnemyShip *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_16_tStringEnemyShip,(xString_Type *)Result)
#define yLength_z_BasicTypes_16_tStringEnemyShip(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_16_tStringEnemyShip)
#define yFirst_z_BasicTypes_16_tStringEnemyShip(P1,Result) (z_BasicTypes_10_tEnemyShip*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_16_tStringEnemyShip,Result)
#define yLast_z_BasicTypes_16_tStringEnemyShip(P1,Result) (z_BasicTypes_10_tEnemyShip*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_16_tStringEnemyShip,Result)
#define yConcat_z_BasicTypes_16_tStringEnemyShip(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_16_tStringEnemyShip,(xString_Type *)Result)
#define ySubString_z_BasicTypes_16_tStringEnemyShip(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_16_tStringEnemyShip,(xString_Type *)Result)
#define yAppend_z_BasicTypes_16_tStringEnemyShip(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_16_tStringEnemyShip)
#define z_BasicTypes_160_empty yEmptystring_z_BasicTypes_16_tStringEnemyShip

#define yAss_z_BasicTypes_16_tStringEnemyShip(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringEnemyShip)
#define yAssF_z_BasicTypes_16_tStringEnemyShip(V,E,A)  yAss_z_BasicTypes_16_tStringEnemyShip(&(V),E,A)
#define yEq_z_BasicTypes_16_tStringEnemyShip(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringEnemyShip)
#define yEqF_z_BasicTypes_16_tStringEnemyShip(Expr1,Expr2)  yEq_z_BasicTypes_16_tStringEnemyShip(Expr1,Expr2)
#define yNEqF_z_BasicTypes_16_tStringEnemyShip(Expr1,Expr2)  ( ! yEq_z_BasicTypes_16_tStringEnemyShip(Expr1,Expr2) )
#define yFree_z_BasicTypes_16_tStringEnemyShip(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringEnemyShip)
#define yExtr_z_BasicTypes_16_tStringEnemyShip(V1,V2) ((z_BasicTypes_10_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_16_tStringEnemyShip))
#define yAddr_z_BasicTypes_16_tStringEnemyShip(V1,V2) ((z_BasicTypes_10_tEnemyShip *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_16_tStringEnemyShip))
#ifndef ANY_z_BasicTypes_16_tStringEnemyShip
#define ANY_z_BasicTypes_16_tStringEnemyShip(R) (z_BasicTypes_16_tStringEnemyShip *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_16_tStringEnemyShip)
#endif
#define z_BasicTypes_16E_copy(P)  P

/*****
* NEWTYPE tStringShotsList  (HEADING section)
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(4),362(20,130),1,9)
******/
#ifndef XOPTSORT
extern XCONST struct xSortIdStruct ySrtR_z_BasicTypes_17_tStringShotsList;
#define ySrtN_z_BasicTypes_17_tStringShotsList  (&ySrtR_z_BasicTypes_17_tStringShotsList)
#endif

#define yEmptystring_z_BasicTypes_17_tStringShotsList(Result) GenString_Emptystring(&ySDL_z_BasicTypes_17_tStringShotsList,Result)
#define yMkString_z_BasicTypes_17_tStringShotsList(P1,Result) (z_BasicTypes_17_tStringShotsList *)GenString_MkString((void *)P1,&ySDL_z_BasicTypes_17_tStringShotsList,(xString_Type *)Result)
#define yLength_z_BasicTypes_17_tStringShotsList(P1) GenString_Length((xString_Type *)P1,&ySDL_z_BasicTypes_17_tStringShotsList)
#define yFirst_z_BasicTypes_17_tStringShotsList(P1,Result) (z_BasicTypes_0W_tCoordinates*)GenString_First((xString_Type *)P1,&ySDL_z_BasicTypes_17_tStringShotsList,Result)
#define yLast_z_BasicTypes_17_tStringShotsList(P1,Result) (z_BasicTypes_0W_tCoordinates*)GenString_Last((xString_Type *)P1,&ySDL_z_BasicTypes_17_tStringShotsList,Result)
#define yConcat_z_BasicTypes_17_tStringShotsList(P1,P2,Result) GenString_Concat((xString_Type *)P1,(xString_Type *)P2,&ySDL_z_BasicTypes_17_tStringShotsList,(xString_Type *)Result)
#define ySubString_z_BasicTypes_17_tStringShotsList(P1,P2,P3,Result) GenString_SubString((xString_Type *)P1,P2,P3,&ySDL_z_BasicTypes_17_tStringShotsList,(xString_Type *)Result)
#define yAppend_z_BasicTypes_17_tStringShotsList(P1,P2) GenString_Append((xString_Type *)P1,(void *)P2,&ySDL_z_BasicTypes_17_tStringShotsList)
#define z_BasicTypes_170_empty yEmptystring_z_BasicTypes_17_tStringShotsList

#define yAss_z_BasicTypes_17_tStringShotsList(Addr,Expr,AssName) (void)GenericAssignSort(Addr,Expr,AssName,(tSDLTypeInfo *)&ySDL_z_BasicTypes_17_tStringShotsList)
#define yAssF_z_BasicTypes_17_tStringShotsList(V,E,A)  yAss_z_BasicTypes_17_tStringShotsList(&(V),E,A)
#define yEq_z_BasicTypes_17_tStringShotsList(Expr1,Expr2) GenericEqualSort((void *)Expr1,(void *)Expr2,(tSDLTypeInfo *)&ySDL_z_BasicTypes_17_tStringShotsList)
#define yEqF_z_BasicTypes_17_tStringShotsList(Expr1,Expr2)  yEq_z_BasicTypes_17_tStringShotsList(Expr1,Expr2)
#define yNEqF_z_BasicTypes_17_tStringShotsList(Expr1,Expr2)  ( ! yEq_z_BasicTypes_17_tStringShotsList(Expr1,Expr2) )
#define yFree_z_BasicTypes_17_tStringShotsList(P) GenericFreeSort((void **)P, (tSDLTypeInfo *)&ySDL_z_BasicTypes_17_tStringShotsList)
#define yExtr_z_BasicTypes_17_tStringShotsList(V1,V2) ((z_BasicTypes_0W_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_17_tStringShotsList))
#define yAddr_z_BasicTypes_17_tStringShotsList(V1,V2) ((z_BasicTypes_0W_tCoordinates *)GenString_Extract((xString_Type *)V1,V2,&ySDL_z_BasicTypes_17_tStringShotsList))
#ifndef ANY_z_BasicTypes_17_tStringShotsList
#define ANY_z_BasicTypes_17_tStringShotsList(R) (z_BasicTypes_17_tStringShotsList *)GenericAnySort(R, (tSDLTypeInfo *)&ySDL_z_BasicTypes_17_tStringShotsList)
#endif
#define z_BasicTypes_17E_copy(P)  P

/*****
* SIGNAL InitDataComplete
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),2,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_04_InitDataComplete;
#define ySigN_z_BasicTypes_04_InitDataComplete  (&ySigR_z_BasicTypes_04_InitDataComplete)
#endif

/*****
* SIGNAL StartSimulation
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),3,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_05_StartSimulation;
#define ySigN_z_BasicTypes_05_StartSimulation  (&ySigR_z_BasicTypes_05_StartSimulation)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
} yPDef_z_BasicTypes_05_StartSimulation;
typedef yPDef_z_BasicTypes_05_StartSimulation  *yPDP_z_BasicTypes_05_StartSimulation;

/*****
* SIGNAL FinishSimulation
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),4,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_06_FinishSimulation;
#define ySigN_z_BasicTypes_06_FinishSimulation  (&ySigR_z_BasicTypes_06_FinishSimulation)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Integer  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
} yPDef_z_BasicTypes_06_FinishSimulation;
typedef yPDef_z_BasicTypes_06_FinishSimulation  *yPDP_z_BasicTypes_06_FinishSimulation;

/*****
* SIGNAL OrderSpeedRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),5,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_07_OrderSpeedRequest;
#define ySigN_z_BasicTypes_07_OrderSpeedRequest  (&ySigR_z_BasicTypes_07_OrderSpeedRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
    z_BasicTypes_1J_tFactorAcceleration  Param3;
} yPDef_z_BasicTypes_07_OrderSpeedRequest;
typedef yPDef_z_BasicTypes_07_OrderSpeedRequest  *yPDP_z_BasicTypes_07_OrderSpeedRequest;

/*****
* SIGNAL OrderTurnRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),6,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_08_OrderTurnRequest;
#define ySigN_z_BasicTypes_08_OrderTurnRequest  (&ySigR_z_BasicTypes_08_OrderTurnRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
    z_BasicTypes_0V_tHeadingChange  Param3;
} yPDef_z_BasicTypes_08_OrderTurnRequest;
typedef yPDef_z_BasicTypes_08_OrderTurnRequest  *yPDP_z_BasicTypes_08_OrderTurnRequest;

/*****
* SIGNAL OrderFireRequest
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),7,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_09_OrderFireRequest;
#define ySigN_z_BasicTypes_09_OrderFireRequest  (&ySigR_z_BasicTypes_09_OrderFireRequest)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
    z_BasicTypes_0T_tNameWeaponry  Param3;
    z_BasicTypes_17_tStringShotsList  Param4;
} yPDef_z_BasicTypes_09_OrderFireRequest;
typedef yPDef_z_BasicTypes_09_OrderFireRequest  *yPDP_z_BasicTypes_09_OrderFireRequest;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_09_OrderFireRequest (void *SVarP);
#endif

/*****
* SIGNAL DestroyShip
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),8,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0A_DestroyShip;
#define ySigN_z_BasicTypes_0A_DestroyShip  (&ySigR_z_BasicTypes_0A_DestroyShip)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
    z_BasicTypes_0U_tNameShip  Param3;
} yPDef_z_BasicTypes_0A_DestroyShip;
typedef yPDef_z_BasicTypes_0A_DestroyShip  *yPDP_z_BasicTypes_0A_DestroyShip;

/*****
* SIGNAL StrategyVictory
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),9,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0B_StrategyVictory;
#define ySigN_z_BasicTypes_0B_StrategyVictory  (&ySigR_z_BasicTypes_0B_StrategyVictory)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1L_tStrategyId  Param1;
} yPDef_z_BasicTypes_0B_StrategyVictory;
typedef yPDef_z_BasicTypes_0B_StrategyVictory  *yPDP_z_BasicTypes_0B_StrategyVictory;

/*****
* SIGNAL StrategyLose
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),10,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0C_StrategyLose;
#define ySigN_z_BasicTypes_0C_StrategyLose  (&ySigR_z_BasicTypes_0C_StrategyLose)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1L_tStrategyId  Param1;
} yPDef_z_BasicTypes_0C_StrategyLose;
typedef yPDef_z_BasicTypes_0C_StrategyLose  *yPDP_z_BasicTypes_0C_StrategyLose;

/*****
* SIGNAL OrderSpeedResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),11,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0D_OrderSpeedResponse;
#define ySigN_z_BasicTypes_0D_OrderSpeedResponse  (&ySigR_z_BasicTypes_0D_OrderSpeedResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
} yPDef_z_BasicTypes_0D_OrderSpeedResponse;
typedef yPDef_z_BasicTypes_0D_OrderSpeedResponse  *yPDP_z_BasicTypes_0D_OrderSpeedResponse;

/*****
* SIGNAL OrderSpeedReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),12,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0E_OrderSpeedReject;
#define ySigN_z_BasicTypes_0E_OrderSpeedReject  (&ySigR_z_BasicTypes_0E_OrderSpeedReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
} yPDef_z_BasicTypes_0E_OrderSpeedReject;
typedef yPDef_z_BasicTypes_0E_OrderSpeedReject  *yPDP_z_BasicTypes_0E_OrderSpeedReject;

/*****
* SIGNAL OrderTurnResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),13,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0F_OrderTurnResponse;
#define ySigN_z_BasicTypes_0F_OrderTurnResponse  (&ySigR_z_BasicTypes_0F_OrderTurnResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
} yPDef_z_BasicTypes_0F_OrderTurnResponse;
typedef yPDef_z_BasicTypes_0F_OrderTurnResponse  *yPDP_z_BasicTypes_0F_OrderTurnResponse;

/*****
* SIGNAL OrderTurnReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),14,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0G_OrderTurnReject;
#define ySigN_z_BasicTypes_0G_OrderTurnReject  (&ySigR_z_BasicTypes_0G_OrderTurnReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
} yPDef_z_BasicTypes_0G_OrderTurnReject;
typedef yPDef_z_BasicTypes_0G_OrderTurnReject  *yPDP_z_BasicTypes_0G_OrderTurnReject;

/*****
* SIGNAL OrderFireResponse
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),15,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0H_OrderFireResponse;
#define ySigN_z_BasicTypes_0H_OrderFireResponse  (&ySigR_z_BasicTypes_0H_OrderFireResponse)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
} yPDef_z_BasicTypes_0H_OrderFireResponse;
typedef yPDef_z_BasicTypes_0H_OrderFireResponse  *yPDP_z_BasicTypes_0H_OrderFireResponse;

/*****
* SIGNAL OrderFireReject
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),16,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0I_OrderFireReject;
#define ySigN_z_BasicTypes_0I_OrderFireReject  (&ySigR_z_BasicTypes_0I_OrderFireReject)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1K_tShipId  Param1;
    z_BasicTypes_1L_tStrategyId  Param2;
} yPDef_z_BasicTypes_0I_OrderFireReject;
typedef yPDef_z_BasicTypes_0I_OrderFireReject  *yPDP_z_BasicTypes_0I_OrderFireReject;

/*****
* SIGNAL ShipsCurrentState
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),17,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0J_ShipsCurrentState;
#define ySigN_z_BasicTypes_0J_ShipsCurrentState  (&ySigR_z_BasicTypes_0J_ShipsCurrentState)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1L_tStrategyId  Param1;
    z_BasicTypes_15_tStringShipCurrentState  Param2;
} yPDef_z_BasicTypes_0J_ShipsCurrentState;
typedef yPDef_z_BasicTypes_0J_ShipsCurrentState  *yPDP_z_BasicTypes_0J_ShipsCurrentState;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0J_ShipsCurrentState (void *SVarP);
#endif

/*****
* SIGNAL VisibleShip
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),18,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0K_VisibleShip;
#define ySigN_z_BasicTypes_0K_VisibleShip  (&ySigR_z_BasicTypes_0K_VisibleShip)
#endif
typedef struct {
    SIGNAL_VARS
    z_BasicTypes_1L_tStrategyId  Param1;
    z_BasicTypes_16_tStringEnemyShip  Param2;
} yPDef_z_BasicTypes_0K_VisibleShip;
typedef yPDef_z_BasicTypes_0K_VisibleShip  *yPDP_z_BasicTypes_0K_VisibleShip;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0K_VisibleShip (void *SVarP);
#endif

/*****
* SIGNAL messageLog
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),19,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0L_messageLog;
#define ySigN_z_BasicTypes_0L_messageLog  (&ySigR_z_BasicTypes_0L_messageLog)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_z_BasicTypes_0L_messageLog;
typedef yPDef_z_BasicTypes_0L_messageLog  *yPDP_z_BasicTypes_0L_messageLog;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0L_messageLog (void *SVarP);
#endif

/*****
* SIGNAL messageError
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(6),233(20,40),20,3)
******/
#ifndef XNOSIGNALIDNODE
extern XCONST struct xSignalIdStruct ySigR_z_BasicTypes_0M_messageError;
#define ySigN_z_BasicTypes_0M_messageError  (&ySigR_z_BasicTypes_0M_messageError)
#endif
typedef struct {
    SIGNAL_VARS
    SDL_Charstring  Param1;
} yPDef_z_BasicTypes_0M_messageError;
typedef yPDef_z_BasicTypes_0M_messageError  *yPDP_z_BasicTypes_0M_messageError;
#ifdef XFREESIGNALFUNCS
extern void yFree_z_BasicTypes_0M_messageError (void *SVarP);
#endif

/*****
* REMOTE VARIABLE gWeaponryCharacter
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(5),329(20,40),1,8)
******/
#ifndef XNOREMOTEVARIDNODE
extern struct xRemoteVarIdStruct yReVR_z_BasicTypes_25_gWeaponryCharacter;
#define yReVN_z_BasicTypes_25_gWeaponryCharacter  (&yReVR_z_BasicTypes_25_gWeaponryCharacter)
#endif

/*****
* REMOTE VARIABLE gShipsCharacter
* <<PACKAGE BasicTypes>>
* #SDTREF(SDL,C:\Testing\Battleships\Packages\BasicTypes.sun(5),329(20,40),2,8)
******/
#ifndef XNOREMOTEVARIDNODE
extern struct xRemoteVarIdStruct yReVR_z_BasicTypes_26_gShipsCharacter;
#define yReVN_z_BasicTypes_26_gShipsCharacter  (&yReVR_z_BasicTypes_26_gShipsCharacter)
#endif

/*************************************************************************
**                #CODE directives, #HEADING sections                   **
*************************************************************************/
#endif
